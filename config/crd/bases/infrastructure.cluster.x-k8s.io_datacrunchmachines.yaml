---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: datacrunchmachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: DataCrunchMachine
    listKind: DataCrunchMachineList
    plural: datacrunchmachines
    singular: datacrunchmachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this DataCrunchMachine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: DataCrunch instance state
      jsonPath: .status.instanceState
      name: State
      type: string
    - description: Machine ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: DataCrunch instance ID
      jsonPath: .spec.providerID
      name: InstanceID
      type: string
    - description: Machine object which owns with this DataCrunchMachine
      jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
      name: Machine
      type: string
    - description: Time duration since creation of DataCrunchMachine
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: DataCrunchMachine is the Schema for the datacrunchmachines API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DataCrunchMachineSpec defines the desired state of DataCrunchMachine
            properties:
              additionalMetadata:
                additionalProperties:
                  type: string
                description: AdditionalMetadata is the additional metadata for the
                  machine
                type: object
              additionalTags:
                additionalProperties:
                  type: string
                description: |-
                  AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
                  DataCrunch provider. Tags must be compliant with DataCrunch's tag naming conventions.
                type: object
              image:
                description: Image specifies the image to use for the instance
                type: string
              instanceType:
                description: InstanceType specifies the DataCrunch instance type (e.g.,
                  "1V100.6V", "1H100.80S.32V", "8H100.80S.176V")
                type: string
              networkInterfaces:
                description: NetworkInterfaces specifies a list of network interfaces
                  to attach to the instance
                items:
                  description: NetworkInterface defines the network interface configuration
                  properties:
                    associatePublicIPAddress:
                      description: AssociatePublicIPAddress specifies whether to associate
                        a public IP address
                      type: boolean
                    deleteOnTermination:
                      description: DeleteOnTermination specifies whether to delete
                        the network interface on termination
                      type: boolean
                    deviceIndex:
                      description: DeviceIndex is the device index for the network
                        interface
                      format: int64
                      type: integer
                    secondaryPrivateIPAddressCount:
                      description: SecondaryPrivateIPAddressCount is the number of
                        secondary private IP addresses
                      format: int64
                      type: integer
                    securityGroupIDs:
                      description: SecurityGroupIDs is a list of security group IDs
                        to associate with the network interface
                      items:
                        type: string
                      type: array
                    subnetID:
                      description: SubnetID is the ID of the subnet to use
                      type: string
                  type: object
                type: array
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              publicIP:
                description: PublicIP specifies whether the instance should get a
                  public IP
                type: boolean
              rootVolume:
                description: RootVolume encapsulates the configuration options for
                  the root volume
                properties:
                  encrypted:
                    description: Encrypted is whether the volume should be encrypted
                    type: boolean
                  iops:
                    description: IOPS is the number of IOPS for the storage device
                    format: int64
                    type: integer
                  size:
                    description: Size specifies the size of the storage device in
                      GB
                    format: int64
                    type: integer
                  type:
                    description: Type is the type of storage to use (e.g., "SSD",
                      "HDD")
                    type: string
                type: object
              spot:
                description: Spot configures the instance to use spot pricing
                properties:
                  maxPrice:
                    description: |-
                      MaxPrice is the maximum price you're willing to pay for the instance
                      If not specified, the on-demand price is used as the maximum
                    type: string
                type: object
              sshKeyName:
                description: SSHKeyName specifies the SSH key name to use for the
                  instance
                type: string
              uncompressedUserData:
                description: UncompressedUserData specifies whether the user data
                  is compressed or not.
                type: boolean
            required:
            - instanceType
            type: object
          status:
            description: DataCrunchMachineStatus defines the observed state of DataCrunchMachine
            properties:
              addresses:
                description: Addresses contains the DataCrunch instance associated
                  addresses.
                items:
                  description: MachineAddress contains information for the node's
                    address.
                  properties:
                    address:
                      description: The machine address.
                      type: string
                    type:
                      description: Machine address type, one of Hostname, ExternalIP,
                        InternalIP, ExternalDNS or InternalDNS.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the DataCrunchMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: |-
                  FailureMessage will be set in the event that there is a terminal problem
                  reconciling the machine and will contain a more verbose string suitable
                  for logging and human consumption.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              failureReason:
                description: |-
                  FailureReason will be set in the event that there is a terminal problem
                  reconciling the machine and will contain a succinct value suitable
                  for machine interpretation.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              instanceState:
                description: InstanceState is the current state of the DataCrunch
                  instance for this machine.
                type: string
              interruptionReason:
                description: InterruptionReason contains the interrupt action reason
                type: string
              ready:
                description: Ready denotes that the machine (infrastructure) is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
