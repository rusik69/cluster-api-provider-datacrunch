linters:
  enable:
    - asciicheck
    - bodyclose
    - depguard
    - dogsled
    - dupl
    - errcheck
    - errorlint
    - exhaustive
    - exportloopref
    - forbidigo
    - funlen
    - gci
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomnd
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - importas
    - ineffassign
    - lll
    - makezero
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nlreturn
    - noctx
    - nolintlint
    - prealloc
    - predeclared
    - revive
    - staticcheck
    - stylecheck
    - thelper
    - tparallel
    - typecheck
    - unconvert
    - unparam
    - unused
    - wastedassign
    - whitespace
    - wsl
  disable:
    - cyclop # covered by gocyclo
    - exhaustivestruct # too strict
    - exhaustruct # too strict
    - forcetypeassert # too strict
    - gochecknoglobals # too strict for this project
    - godox # allows TODO comments
    - goerr113 # too strict
    - ireturn # too strict
    - nilnil # too strict
    - paralleltest # not needed for this project
    - testpackage # too strict
    - varnamelen # too strict
    - wrapcheck # too strict

linters-settings:
  funlen:
    lines: 100
    statements: 50
  gci:
    sections:
      - standard
      - default
      - prefix(github.com/rusik69/cluster-api-provider-datacrunch)
  goconst:
    min-len: 2
    min-occurrences: 2
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
  gocyclo:
    min-complexity: 15
  goimports:
    local-prefixes: github.com/rusik69/cluster-api-provider-datacrunch
  gomnd:
    settings:
      mnd:
        # don't include the "operation" and "assign"
        checks: argument,case,condition,return
  govet:
    check-shadowing: true
    settings:
      printf:
        funcs:
          - (github.com/go-logr/logr.Logger).Infof
          - (github.com/go-logr/logr.Logger).Warnf
          - (github.com/go-logr/logr.Logger).Errorf
          - (github.com/go-logr/logr.Logger).Fatalf
  lll:
    line-length: 140
  misspell:
    locale: US
  nlreturn:
    block-size: 2
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped

issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - path: _test\.go
      linters:
        - gomnd
        - funlen
        - gocognit
        - gocyclo
    - path: test/
      linters:
        - gomnd
        - funlen
        - gocognit
        - gocyclo
        - dupl
    - path: cmd/
      linters:
        - funlen
    # https://github.com/go-critic/go-critic/issues/926
    - linters:
        - gocritic
      text: "unnecessaryDefer:"
    - linters:
        - goheader
      source: "^//go:build"
  # Independently from option `exclude` we use default exclude patterns,
  # it can be disabled by this option. To list all
  # excluded by default patterns execute `golangci-lint run --help`.
  # Default value for this option is true.
  exclude-use-default: false

  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-issues-per-linter: 0

  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0

run:
  timeout: 10m
  skip-dirs:
    - .git
    - bin
    - dist
    - vendor
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*\\.gen\\.go$" 